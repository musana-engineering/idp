replicaCount: 1

nodeSelector:
  agentpool: idpcore

tolerations:
  - effect: NoSchedule
    key: CriticalAddonsOnly
    operator: Equal
    value: "true"

topologySpreadConstraints: []

affinity: {}

# -- Pod priority class name.
priorityClassName: ""

# -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# -- Run the controller on the host network
hostNetwork: false

webhook:
  # -- Specifies whether a webhook deployment be created.
  create: true
  nodeSelector:
    agentpool: idpcore

  certManager:
    # -- Enabling cert-manager support will disable the built in secret and
    # switch to using cert-manager (installed separately) to automatically issue
    # and renew the webhook certificate. This chart does not install
    # cert-manager for you, See https://cert-manager.io/docs/
    enabled: false
  tolerations:
    - effect: NoSchedule
      key: CriticalAddonsOnly
      operator: Equal
      value: "true"


certController:
  # -- Specifies whether a certificate controller deployment be created.
  create: true
  requeueInterval: "5m"
  replicaCount: 1

  nodeSelector:
    agentpool: idpcore

  tolerations:
    - effect: NoSchedule
      key: CriticalAddonsOnly
      operator: Equal
      value: "true"


  prometheus:
    # -- deprecated. will be removed with 0.7.0, use serviceMonitor instead
    enabled: false
    service:
      # -- deprecated. will be removed with 0.7.0, use serviceMonitor instead
      port: 8080

  podSecurityContext: {}
      # fsGroup: 2000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault

  resources:
    requests:
      cpu: 200m
      memory: 256Mi

# -- Specifies `dnsOptions` to deployment
dnsConfig: {}